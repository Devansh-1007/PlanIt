<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"  content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link href="https://fonts.googleapis.com/css?family=Poppins&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.14.0/css/all.min.css">
    <link rel="stylesheet" href="/to-do-list.css">
    <title>Todo List</title>
<style>
    *{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    background-image: linear-gradient(120deg, #6fcefa, #031e2c);
    color: white;
    font-family: "Poppins", sans-serif;
    min-height: 100vh;

}

h1 {
    
font-family: 'Luckiest Guy', cursive;
color: #031e2c;
font-size: 44px;

}

header {
    font-size: 1.0rem;

}
header,
form {
    min-height: 20vh;
    display: flex;
    justify-content: center;
    align-items: center;
}

form input, form button {
    padding: 0.5rem;
    font-size: 1.1rem;
    border: none;
    background: white;
}
form button {
    color:#031e2c;
    background: white;
    cursor: pointer;
    transition: all 0.3s ease; 
}

form button:hover {
    background: #031e2c;
    color: white;
}

.todo-container {
    display: flex;
    justify-content: center;
    align-items: center;
}

.todo-list {
    min-width: 30%;
    list-style: none;

}

.todo {
    margin: 0.5rem;
    background: white;
    color: black;
    font-size: 1.0rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    transition: all 0.4s ease;
}

.todo li {
    flex: 1;

}

.trash-btn,
.complete-btn {
    background: #031e2c;
    color: white;
    border: none;
    padding: 1rem;
    cursor: pointer;
    font-size: 0.6rem;

}

.complete-btn {
    background: rgb(73, 204, 73);
}

.todo-item {
    padding: 0rem 0.5rem;
}

.fa-trash,
.fa-check {
    pointer-events: none;
}

.completed {
    text-decoration: line-through;
    opacity: 0.5;
}

.fall {
    transform: translateY(8rem) rotateZ(20deg);
    opacity: 0;
}

select {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    outline: none;
    border: none;

}

.select {
    margin: 1rem;
    position: relative;
    overflow: hidden;
}

select {
    color: #031e2c;
    width: 7.5rem;
    cursor: pointer;
    padding: 0.6rem;
}

.select::after {
    content: "\25BC";
    position: absolute;
    background: #031e2c;
    top: 0;
    right: 0;
    padding: 0.5rem;
    pointer-events: none;
    transition: all 0.4s ease;
}

.select:hover::after {
    background: white;
    color: #031e2c;
    
}
</style>
</head>
<body>
    <header>
        <h1>User's Todo List</h1>
    </header>
    <form>
        <input type="text" class="todo-input">
        <button class="todo-button" type="submit">
            <i class="fa fa-plus-square"></i>
        </button>
        <div class="select">
            <select name="todos" class="filter-todo">
                <option value="all">All</option>
                <option value="completed">Completed</option>
                <option value="incompleted">Incompleted</option>
            </select>
        </div>

    </form>
    <div class="todo-container">
        <ul class="todo-list"></ul>    
 
    </div>

</body>
<script>
    // Selector
const todoInput = document.querySelector('.todo-input');
const todoButton = document.querySelector('.todo-button');
const todoList = document.querySelector('.todo-list');
const filterOption = document.querySelector('.filter-todo');


// Event Listeners
document.addEventListener('DOMContentLoaded', getTodos);
todoButton.addEventListener('click', addTodo);
todoList.addEventListener('click', deleteCheck);
filterOption.addEventListener('click', filterTodo);

// Function
function addTodo(event) {
    // Prevent form from Submitting
    event.preventDefault();
    // Todo DIV
    const todoDiv = document.createElement('div');
    todoDiv.classList.add("todo");
    //Create LI
    const newTodo = document.createElement('li');
    // Taking Input
    newTodo.innerText = todoInput.value;
    newTodo.classList.add('todo-item')
    todoDiv.appendChild(newTodo);
    
    //ADD TODO TO COCAL STORAGE
    saveLocalTodos(todoInput.value);

    // CHECKED Mark Button
    const completedButton = document.createElement('button');
    completedButton.innerHTML = '<i class="fas fa-check"></i>';
    completedButton.classList.add('complete-btn');
    todoDiv.appendChild(completedButton);
    // Trash  Button
    const trashButton = document.createElement('button');
    trashButton.innerHTML = '<i class="fas fa-trash"></i>';
    trashButton.classList.add('trash-btn');
    todoDiv.appendChild(trashButton);
    // Append to List
    todoList.appendChild(todoDiv)
    // Clear Todo Input Value
    todoInput.value = "";

}

function deleteCheck(e) {

    const item = e.target;
    //DELETE
    if (item.classList[0] === "trash-btn") {
        const todo = item.parentElement;
        // Animation
        todo.classList.add('fall');

        removeLocalTodos(todo);
        //todo.remove();
        todo.addEventListener('transitionend', function() {

            todo.remove();

        });

    }

    // Check Mark
    if (item.classList[0] === "complete-btn") {
        const todo = item.parentElement;
        todo.classList.toggle("completed");
    }

}

function filterTodo(e) {
    const todos = todoList.childNodes;
    todos.forEach(function(todo){
        switch(e.target.value) {
            case "all":
                todo.style.display = "flex";
                break;
            case "completed":
                if (todo.classList.contains("completed")) {
                    todo.style.display = 'flex';

                } else {
                    todo.style.display = "none";
                }
                break;
            case "incompleted":
                if (!todo.classList.contains("completed")) {
                    todo.style.display = 'flex';

                } else {
                    todo.style.display = "none";
                } 
                break;  
        }
    });
}

function saveLocalTodos(todo){
    // Check ---Hey Do I have thing in here
    let todos;
    if(localStorage.getItem('todos') === null){
        todos = [];

    }else{
        todos = JSON.parse(localStorage.getItem('todos'));
    }
    todos.push(todo);
    localStorage.setItem("todos", JSON.stringify(todos));
}

function getTodos(){
    // Check ---Hey Do I have thing in here
    let todos;
    if(localStorage.getItem('todos') === null){
        todos = [];

    }else{
        todos = JSON.parse(localStorage.getItem('todos'));
    }
    todos.forEach(function(todo){

        const todoDiv = document.createElement('div');
        todoDiv.classList.add("todo");
        //Create LI
        const newTodo = document.createElement('li');
        newTodo.innerText = todo;
        newTodo.classList.add('todo-item')
        todoDiv.appendChild(newTodo);
        // CHECKED Mark Button
        const completedButton = document.createElement('button');
        completedButton.innerHTML = '<i class="fas fa-check"></i>';
        completedButton.classList.add('complete-btn');
        todoDiv.appendChild(completedButton);
        // Trash  Button
        const trashButton = document.createElement('button');
        trashButton.innerHTML = '<i class="fas fa-trash"></i>';
        trashButton.classList.add('trash-btn');
        todoDiv.appendChild(trashButton);
        // Append to List
        todoList.appendChild(todoDiv)    

    });
    
}

function removeLocalTodos(todo) {
    let todos;
    if(localStorage.getItem('todos') === null){
        todos = [];

    }else{
        todos = JSON.parse(localStorage.getItem('todos'));
    }
    const todoIndex = Array.from(todoList.childNodes).indexOf(todo);
    todos.splice(todoIndex, 1);
    localStorage.setItem("todos", JSON.stringify(todos)); 
    
    /*
    or,,,
    const todoIndex = todo.children[0].innerText;
    todos.splice(todos.indexOf(todoIndex), 1);
    localStorage.setItem("todos", JSON.stringify(todos));
    */
}
</script>
</html>